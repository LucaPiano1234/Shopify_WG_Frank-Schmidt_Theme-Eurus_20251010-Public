{%- paginate pages by 1 -%}
{% liquid
  assign choose_option_id = product.id | append: paginate.current_page
  assign section_id = section.id | append: choose_option_id

  assign unavailable_text = 'products.product.unavailable' | t 
  assign product_form_id = 'product-form-' | append: section_id

  assign rounded_corner_image = false
  if settings.edges_type == 'rounded_corners'
    assign rounded_corner_image = true
  endif 
  if settings.lang_direction contains request.locale.iso_code
    assign is_rtl = true
  else
    assign is_rtl = false
  endif
  assign can_show_preorder = false
  if settings.preorder_show == 'yes' or settings.preorder_show == 'on_backordered' and product.selected_or_first_available_variant.inventory_policy == 'continue' and product.selected_or_first_available_variant.inventory_quantity < 1 and product.selected_or_first_available_variant.inventory_management != nil
    if settings.applied_products_preorder == blank and settings.applied_collections_preorder == blank
      assign can_show_preorder = true
    else 
      assign applied_product_ids = settings.applied_products_preorder | map: 'id' | join: ','
      assign applied_collection_ids = settings.applied_collections_preorder | map: 'id' | join: ','

      if applied_product_ids contains product.id
        assign can_show_preorder = true
      endif

      unless can_show_preorder 
        assign product_collection_ids = product.collections | map: 'id'
        for id in product_collection_ids
          if applied_collection_ids contains id
            assign can_show_preorder = true
          endif
        endfor
      endunless
    endif
  endif 

  assign disable_cart_edt = false
  if product.gift_card? or can_show_preorder and settings.hide_when_pre_order
    assign disable_cart_edt = true
  endif

  assign shipping_insurance = false
  if settings.enable_shipping_insurance and settings.product_shipping_insurance != blank and settings.product_shipping_insurance.selected_or_first_available_variant.available
    assign shipping_insurance = settings.product_shipping_insurance.selected_or_first_available_variant.id
    for item in cart.items
      if item.product.selected_or_first_available_variant.id == settings.product_shipping_insurance.selected_or_first_available_variant.id
        assign shipping_insurance = false
      endif
    endfor
  endif
  assign swatch_count = 0
  for option in product.options_with_values
    assign name = option.name
    case settings.swatches_type
      when 'text'
        if settings.text_option_name contains name
          assign swatch_count = swatch_count | plus: 1
        endif
      when 'color'
        if settings.color_option_name contains name
          assign swatch_count = swatch_count | plus: 1
        endif
      when 'both_text_and_color'
        if settings.text_option_name contains name or settings.color_option_name contains name
          assign swatch_count = swatch_count | plus: 1
        endif
    endcase
  endfor 
%}
{%- capture data_for_customer_event -%}
  {
    "product": {
      "id": {{ product.id | default: 0 }},
      "selected_variant_id": {{ product.selected_or_first_available_variant.id | default: 0 }},
      "has_only_default_variant": {{ product.has_only_default_variant }},
      "title": "{{ product.title | escape }}",
      "variant_title": "{{ product.selected_or_first_available_variant.title | escape }}",
      "sku": "{{ product.selected_or_first_available_variant.sku }}",
      "currencyCode": "{{ cart.currency.iso_code }}",
      "price": {{ product.selected_or_first_available_variant.price | default: 0 }},
      "vendor": "{{ product.vendor | escape }}",
      "category": "{{ collection.title | default: '' | escape }}"
    }
  }
{%- endcapture %}
<div id="choose-options-content">
  <div 
    id="x-product-template-{{ product.id }}-{{ section_id }}"
    class="choose-options flex items-center w-full h-full border-solid md:border pt-7 pb-5 lg:pt-9 lg:pb-7{% if settings.edges_type == 'rounded_corners' %} md:rounded-[10px]{% unless section.settings.full_width_mobile %} rounded-[10px]{% endunless %}{% endif %}"
  >
    <div
      id="choose-options-content-{{ choose_option_id }}"
      x-init='$nextTick(() => { $store.xBadges && $store.xBadges.load($el, () => {}, null, true); })'
      class="choose-options-content content-center w-full h-full"
      {%- if product != blank -%}
        x-intersect.once='$store.xCustomerEvent.fire("product_viewed_custom", $el)'
        x-customer-event-data="{{ data_for_customer_event | escape }}"
      {%- endif -%}
    >
      <div class="w-full scrollbar-body max-h-full overflow-y-auto pr-4 lg:pr-7 pl-4 lg:pl-7{% if is_rtl %} rtl{% endif %}">
        <button @click="showOptions =! showOptions" class="js-close-button top-1 group-close-btn right-2 lg:top-2 lg:right-2 rtl:right-auto rtl:lg:right-auto rtl:left-2 rtl:lg:left-2 z-20 absolute pl-2 pr-2 pb-2 pt-2">
          <span class="bg-[rgb(var(--colors-line-and-border))] block icon-close-container w-fit rounded-full">
            {% render 'icon-alls', icon: 'icon-close', animation_class: 'icon-close-animation w-4 h-4' %}
          </span>
        </button>
        <div id="ProductInfo-{{ section_id }}" class="w-full pb-1 lg:pl-0 md:pr-0 text-left{% unless is_rtl %} md:list-layout:text-left{% else %} md:list-layout:text-right{% endunless %}"> 
          <p href="{{ product.url }}" class="product-title mt-3 x-card-title h5 leading-tight p-break-words">{{ product.title | escape }}</p>
          {% comment %} price {% endcomment %}
          <div class="mt-2.5 mb-5 x-card-price">
            <div id="price-{{ section_id }}" role="status">
              {%- render 'price',
                product: product,
                use_variant: true,
                container: 'main-product-price'
              -%}
            </div>
            <div class="leading-none next-price empty:hidden"></div>
            <div class="shopify-payment-terms">
              {%- assign product_form_installment_id = 'product-form-installment-' | append: section_id -%}
              {%- form 'product', product, id: product_form_installment_id, class: 'installment caption-large' -%}
                <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                {{ form | payment_terms }}
              {%- endform -%}
            </div>
          </div> 
          {% comment %} variant option {% endcomment %}
          {%- unless product.has_only_default_variant -%}
            <div
              class="variant-selects x-variants-data-js x-product-data-container"
              x-data='xVariantSelectCard($el,"{{ section_id }}", "{{ product.id }}", "{{ product.url }}", false, true, false, "{{ paginate.current_page }}")'
              data-url="{{ product.url }}"
              {% for option in product.options_with_values %}
                data-option{{ forloop.index }}="{{ option.selected_value | escape }}"
              {% endfor %}
            >
              <div
                id="variant-update-{{ section_id }}"
                class="variant-update-{{ section_id }} md:list-layout:flex md:list-layout:flex-wrap md:list-layout:gap-x-12 options-container"
              >
                <script type="application/json" data-selected-variant>{{ product.selected_or_first_available_variant | json }}</script>
                {%- for option in product.options_with_values -%}
                  {%- assign option_index = forloop.index | minus: 1 -%}
                  {%- if settings.quick_add_picker_type == 'button' -%}
                    <fieldset
                      id="Option-{{ section_id }}-{{ forloop.index0 }}"
                      class="product-form__input pl-0 flex flex-wrap pb-5 quick-view:pb-2 eurus{% if settings.products_color_swatches_enable_on_collection_page and settings.color_option_name contains option.name and settings.swatches_type == 'color' or settings.swatches_type == 'both_text_and_color' %} gap-x-2.5{% else %} gap-x-1.5{% endif %}"
                      data-option-name="{{ option.name | handle }}"
                      data-option-index="{{ forloop.index | minus: 1 }}"
                      {% if settings.products_color_swatches_enable_on_collection_page and settings.swatches_type == 'color' or settings.swatches_type == 'both_text_and_color' and settings.color_option_name contains option.name %}
                        data-swatch="true"
                      {% endif %}
                    >
                      <legend class="font-semibold p-break-words text-left rtl:text-right">{{ option.name }}{% if settings.products_color_swatches_enable_on_collection_page and settings.swatches_type == 'color' or settings.swatches_type == 'both_text_and_color' and settings.color_option_name contains option.name %}:
                      <span data-option-name="{{ option.name | handle }}" class="option-selected-value">{{- option.selected_value -}}</span>{% endif %}
                      </legend>
                      {%- liquid
                        assign color_option_values = settings.color_option_values | newline_to_br | strip_newlines | split: '<br />'
                        assign swatch_natural = false     
                        if settings.products_color_swatches_style == 'natural'
                          assign swatch_natural = true
                        endif
                        assign ratio_image = false
                      -%}
                      {%- for value in option.values -%}
                        {%- liquid
                          assign preview_image = blank
                          assign variant_value = value.variant
                          if variant_value.featured_media.preview_image
                            assign preview_image = variant_value.featured_media.preview_image
                            unless ratio_image
                              assign ratio_image = 1 | divided_by: variant_value.featured_media.preview_image.aspect_ratio | times: 100
                            endunless
                          elsif product.featured_media
                            assign preview_image = product.featured_media
                            unless ratio_image
                              assign ratio_image = 1 | divided_by: product.featured_media.aspect_ratio | times: 100
                            endunless
                          endif
                        -%}
                        {%- capture input_id -%}{{ section_id }}-{{ option.position }}-{{ forloop.index0 }}{%- endcapture -%}
                      
                        {%- capture input_name -%}
                          {{ option.name }}-{{ option.position }}
                        {%- endcapture -%}
                      
                        {%- capture input_dataset -%}
                          data-available="{{ value.available }}"
                          data-product-url="{{ value.product_url }}"
                          data-option-value-id="{{ value.id }}"
                        {%- endcapture -%}
                        
                          {%- liquid
                            assign color_custom = blank
                            assign swatch_image = false
                            assign color_value = ''
                            for color_option_value in color_option_values reversed
                              assign option_key = color_option_value | split: ':' | first
                              assign option_value = color_option_value | split: ':' | last | strip
                      
                              if option_key == value and option_value contains '.'
                                assign color_custom = option_key
                                assign swatch_image = true
                                assign color_value = option_value
                                break
                              endif
                              assign multi_colors = option_value | remove_first: '#' | split: '#'
                              if option_key == value
                                assign color_custom = option_key
                                assign color_value = option_value
                                break
                              endif
                            endfor  
                          -%}
                          {% if preview_image and settings.replace_color_with_variant_images %}
                            {% if settings.color_option_name contains option.name %}
                              {%- style %}
                                .color-watches.variant-{{ option.position }}-{{ forloop.index0 }}-{{ product.id }}:before {
                                  background-image: var(--bg-image);
                                }
                              {%- endstyle %}
                            {% endif %}
                          {% elsif color_custom != '' %}
                            {%- style %}
                              {% if swatch_image %}
                                [data-swatch="{{ color_custom }}"]:before {
                                  background-image: url({{ color_value | file_img_url: "100x100" }});
                                }
                              {% elsif multi_colors.size == 3 %}
                                [data-swatch="{{ color_custom }}"]:before {
                                  background: linear-gradient(45deg, {{ '#' | append: multi_colors[0] }}, {{ '#' | append: multi_colors[0] }} 33.3%, {{ '#' | append: multi_colors[1] }} 33.3%, {{ '#' | append: multi_colors[1] }} 66.6%, {{ '#' | append: multi_colors[2] }} 66.6%, {{ '#' | append: multi_colors[2] }});
                                }
                              {% elsif multi_colors.size == 2 %}
                                [data-swatch="{{ color_custom }}"]:before {
                                  background: linear-gradient(45deg, {{ '#' | append: multi_colors[0] }}, {{ '#' | append: multi_colors[0] }} 50%, {{ '#' | append: multi_colors[1] }} 50%, {{ '#' | append: multi_colors[1] }});
                                }
                              {% else %}
                                [data-swatch="{{ color_custom }}"]:before {
                                  background: {{ color_value }};
                                }
                              {% endif %}
                            {%- endstyle %}
                          {% endif %}
                          <input 
                            id="{{ input_id }}"                            
                            section-id="{{ section_id }}"
                            option-pos="{{ option.position }}"
                            forloop="{{ forloop.index0 }}"
                            type="radio"
                            name="{{ input_name }}"
                            {{ input_dataset }}
                            value="{{ value | escape }}"
                            form="{{ product_form_id }}"
                            class="absolute opacity-0 h-0 w-0 input-radio{% unless value.available %} disabled{% endunless %}"                           
                            @change="setTimeout(() => { 
                              updateProductCard(-1, '{{ value.product_url }}');
                              loadingEls = '{{ input_id }}';
                            }, 0)"
                            aria-label="{{ value | escape }}"
                            {% if value.selected %}
                              checked
                            {% endif %}
                          >
                          {%- liquid       
                            if settings.products_color_swatches_style == 'round'
                              assign rounded = 'rounded-full before:rounded-full'
                            endif      
                          -%}
                      
                          {% if settings.products_color_swatches_enable_on_collection_page and settings.color_option_name contains option.name and settings.swatches_type == 'color' or settings.swatches_type == 'both_text_and_color' %}
                            <label 
                              class="color-watches relative variant-{{ option.position }}-{{ forloop.index0 }}-{{ product.id }} cursor-pointer mt-2.5 inline-flex h-9 w-9 relative  {{ rounded }}" 
                              for="{{ input_id }}" 
                              data-swatch="{{ color_custom }}"
                              data-optionindex="{{ option_index }}"
                              data-optionvalue="{{ value | escape | replace: '&lt;', '\u003c' | replace: '&gt;', '\u003e' }}"
                              data-option-value-id="{{ value.id }}"
                              {% if preview_image == blank or settings.replace_color_with_variant_images == false and color_custom == '' %}
                                {% liquid
                                  if value.swatch.image
                                    assign image_url = value.swatch.image | image_url: width: 50
                                    assign swatch_value = 'url(' | append: image_url | append: ')'
                                  elsif value.swatch.color
                                    assign swatch_value = 'rgb(' | append: value.swatch.color.rgb | append: ')'
                                  else
                                    assign swatch_value = value | split: ' ' | last | handle
                                  endif
                                %}
                                style="background: {{ swatch_value }};"
                              {% elsif swatch_natural and ratio_image %}
                                style="--ratio-image: {{ ratio_image }}%; --bg-image: url('{{ preview_image | image_url: width: 100, height: 100 }}')"
                              {% else %}
                                style="--bg-image: url('{{ preview_image | image_url: width: 100, height: 100 }}')"
                              {% endif %}
                              tabindex="0"
                              aria-label="{{ value | escape }}"
                            >
                              <div x-cloak x-show="loadingEls === '{{ input_id }}'" class="w-full h-full flex items-center justify-center rounded-full absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2 bg-[rgba(var(--colors-background))]">
                                <div class="animate-spin w-4 h-4 border-loading border-[rgba(var(--colors-text))]"></div>
                              </div>
                              <span class="h-full w-full color-watches-disable"></span>
                            </label>
                          {% else %}
                            <label class="flex relative items-center mt-2.5 outline-none font-medium cursor-pointer pl-5 pr-5 pt-2 pb-2 border bg-[rgba(var(--background-color),1)]
                              {% if rounded_corner_image %} rounded-md{% endif %}" for="{{ input_id }}"
                            >
                              <div x-cloak x-show="loadingEls === '{{ input_id }}'" class="w-4 h-4 absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2">
                                <div class="animate-spin w-4 h-4 border-loading"></div>
                              </div>
                              <span :class="loadingEls === '{{ input_id }}' && 'invisible'" class="p-break-words">{{ value | escape }}</span>
                            </label>
                          {% endif %}
                          <script type="application/json" data-option-value-id="{{ value.id }}" data-resource="{{ input_id }}">
                            {{ value.variant | json }}
                          </script>
                      {%- endfor -%}
                    </fieldset>
                  {%- else -%}
                    <div 
                      data-option-name="{{ option.name | handle }}"
                      data-option-index="{{ forloop.index | minus: 1 }}"
                    >
                      <label class="mt-1 mb-1 font-medium text-left rtl:text-right block" for="Option-{{ section.id }}-{{ forloop.index0 }}">
                        {{ option.name }}
                      </label>
                      <div class="select relative outline-none eurus">
                        <select
                          id="Option-{{ section.id }}-{{ forloop.index0 }}"
                          class="product-form__input w-full pt-2.5 pb-2.5 pl-5 pr-8 rtl:pr-5 rtl:pl-8 mt-2 mb-2 bg-transparent focus:border-current border appearance-none outline-none border-solid focus-visible:outline-none cursor-pointer{% if settings.edges_type == 'rounded_corners' %} !rounded-md{% endif %}"
                          name="{{ option.name }}"
                          form="{{ product_form_id }}"
                          @change="setTimeout(() => {
                            Array.from($el.options).forEach(option => { option.removeAttribute('selected') });
                            $el.options[$el.selectedIndex].setAttribute('selected', 'selected');
                            updateProductCard(-1, '{{ product.url }}');
                            loadingEls = 'Option-{{ section.id }}-{{ forloop.index0 }}'
                          }, 0)"
                        > 
                          {%- liquid
                            assign enable_color_swatches = false
                            if settings.products_color_swatches_enable_on_collection_page and settings.swatches_type == 'color' and settings.color_option_name contains option.name
                              assign enable_color_swatches = true
                            endif
                          -%}
                          {% render 'product-variant-options',
                            product: product,
                            option: option,
                            option_index: option_index,
                            product_form_id: product_form_id,
                            input_type: 'select',
                            enable_color_swatches: enable_color_swatches
                          %}
                        </select>
                        <div x-cloak x-show="loadingEls === 'Option-{{ section.id }}-{{ forloop.index0 }}'" class="w-4 h-4 absolute top-1/2 right-3 rtl:right-auto rtl:left-3 -translate-y-1/2">
                          <div class="animate-spin w-4 h-4 border-loading border-[rgba(var(--colors-text))]"></div>
                        </div>
                        <span x-cloak x-show="loadingEls !== 'Option-{{ section.id }}-{{ forloop.index0 }}'" class="absolute top-1/2 right-4 rtl:right-auto rtl:left-4 -translate-y-1/2 w-2.5 inline-block pointer-events-none">
                          {% render 'icon-alls', icon: 'icon-caret' %}
                        </span>
                      </div>
                    </div>
                  {%- endif %}
                {%- endfor -%}
              </div>
            </div>
          {%- else -%}
            <div x-init="document.addEventListener('eurus:cart:items-changed', () => {
              Alpine.store('xUpdateVariantQuanity').updateQuantity('{{ section_id }}', '{{ product.url }}');
            });"></div>
          {%- endunless -%}
          <div {% if settings.gift_wrapping_product != blank and settings.gift_wrapping_product.selected_or_first_available_variant and settings.engraving_product == blank %}
            x-data="xProductCart('{{ settings.gift_wrapping_product.selected_or_first_available_variant.id }}', '')"
          {% elsif settings.engraving_product != blank and settings.engraving_product.selected_or_first_available_variant and settings.gift_wrapping_product == blank %}
            x-data="xProductCart('', '{{ settings.engraving_product.selected_or_first_available_variant.id }}')"
          {% elsif settings.engraving_product != blank and settings.engraving_product.selected_or_first_available_variant and settings.gift_wrapping_product != blank and settings.gift_wrapping_product.selected_or_first_available_variant %}
            x-data="xProductCart('{{ settings.gift_wrapping_product.selected_or_first_available_variant.id }}', '{{ settings.engraving_product.selected_or_first_available_variant.id }}')"
          {% else %}
            x-data="xProductCart()"
          {% endif %}>
            <div class="choose-option-footer md:list-layout:text-left text-center mt-2.5 md:mt-0 gap-x-2.5 md:gap-0">
            {% comment %} buy-button {% endcomment %}
              <div x-ref='product_form_container' class="button-product mb-3"
              >
                {% liquid 
                  assign check_against_inventory = true
                  if product.selected_or_first_available_variant.inventory_management != 'shopify' or product.selected_or_first_available_variant.inventory_policy == 'continue'
                    assign check_against_inventory = false
                  endif
                  if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
                    assign quantity_rule_soldout = true
                  endif
                %}
                <div>
                  {%- form 'product', product, id: product_form_id, class: 'form md:list-layout:block flex flex-col', novalidate: 'novalidate', data-type: 'add-to-cart-form', x-ref: 'product_form' -%}
                    <input type="hidden" id="update-variant-{{ section_id }}" name="id" value="{{ product.selected_or_first_available_variant.id }}">
                    {% if settings.show_in_cart_items != 'none' %}
                      <div class="hidden" id="cart-edt-{{ section_id }}">
                        {% render 'estimate-shipping-cart', product: product, message: settings.message_estimate_cart, disable_cart_edt: disable_cart_edt %}
                      </div>
                    {% endif %}
                    {% if settings.preorder_show != 'no' %}
                      <div class="hidden" id="preorder-{{ section_id }}">
                        {% if can_show_preorder %}
                          {% liquid  
                            assign message_preorder = 'general.preorder.message_preorder' | t
                            if settings.message_preorder != blank
                              assign message_preorder = settings.message_preorder
                            endif 
                          %}
                          <input name="properties[{{ 'general.preorder.name' | t }}]" class="hidden" value="{{ message_preorder }}"/>
                        {% endif %}
                      </div>
                    {% endif %}
                    {% style %}
                      #items-grid .add_to_cart_button.choose_option_atc {
                        margin-top: 0;
                      }
                    {% endstyle %}
                    <button
                      id="x-atc-button-{{ section_id }}"
                      role="button"
                      name="add"
                      type="submit"
                      @click.prevent="errorMessage == false && addToCart($event)"
                      :class="errorMessage && 'opacity-60 cursor-not-allowed'"
                      class="hidden md:block relative choose_option_atc h-full mt-2 not-icon add_to_cart_button button--quickview button button-solid disable-action-btn-animation disabled:opacity-60 disabled:cursor-not-allowed duration-200 text-[12px] lg:text-[14px] w-full pr-5 pl-5 md:list-layout:w-auto pt-2.5 pb-2.5 lg:pt-3 lg:pb-3"
                      {% if settings.enable_shipping_insurance and settings.shipping_insurance_added_by_default and shipping_insurance %}
                        x-init="loadInsurance('{{ shipping_insurance }}')"
                      {% endif %}
                      {% if settings.enable_shipping_insurance and settings.product_shipping_insurance != blank and settings.product_shipping_insurance.id == product.id %}
                        style="display: none;"
                      {% endif %}
                      x-intersect.once.margin.200px="Alpine.store('xCartHelper').validateCart();"
                      {% if product.selected_or_first_available_variant.available == false
                        or quantity_rule_soldout
                        or product.selected_or_first_available_variant == nil
                      %}
                        disabled
                      {% endif %}
                    >
                      <span class="x-atc-text" :class="{ 'opacity-0 is-focus-button' : loading, 'hidden' : errorMessage}">
                        {%- if product.selected_or_first_available_variant == nil -%}
                          {{ 'products.product.unavailable' | t }}
                        {%- elsif product.selected_or_first_available_variant.available == false or quantity_rule_soldout -%}
                          {% assign button_label = 'products.product.sold_out' | t %}
                          <span class="flex items-center justify-center">
                            {% render 'button-label', button_label: button_label, show_button_style: 'primary' %}
                          </span>
                        {%- else -%}
                          {% liquid 
                            if can_show_preorder
                              assign button_label = 'products.product.pre_order' | t
                              if settings.card_button_preorder != blank
                                assign button_label = settings.card_button_preorder
                              endif
                            else 
                              assign button_label = 'products.product.add_to_cart' | t
                            endif
                          %}
                          <span class="flex items-center justify-center">
                            {% render 'button-label', button_label: button_label, show_button_style: 'primary' %}
                          </span>
                        {% endif %}
                      </span>
                      <div
                        class="flex gap-x-2 items-center justify-center"
                        role="alert"
                        x-cloak
                        x-show="errorMessage"
                      >
                        {{ 'products.product.sold_out' | t }}
                      </div>
                      <div class="lg:inline-block animate-spin w-4 h-4 md:w-5 md:h-5 absolute top-[calc(50%-8px)] left-[calc(50%-8px)] md:top-[calc(50%-10px)] md:left-[calc(50%-10px)]" x-show="loading" x-cloak>
                        {% render 'icon-alls', icon: 'icon-loading' %}
                      </div>
                    </button>
                    <button
                      id="x-atc-button-{{ section_id }}"
                      role="button"
                      name="add"
                      type="submit"
                      @click.prevent="errorMessage == false && addToCart($event)"
                      :class="errorMessage && 'opacity-60 cursor-not-allowed'"
                      class="block md:hidden button choose_option_quickview ml-auto label-btn-quickview button-disable-effect not-icon button--quickview rounded-full lg:leading-snug none_border h-full p-[6px] disabled:cursor-not-allowed disable-action-btn-animation disabled:opacity-60"
                      {% if settings.enable_shipping_insurance and settings.shipping_insurance_added_by_default and shipping_insurance %}
                        x-init="loadInsurance('{{ shipping_insurance }}')"
                      {% endif %}
                      {% if settings.enable_shipping_insurance and settings.product_shipping_insurance != blank and settings.product_shipping_insurance.id == product.id %}
                        style="display: none;"
                      {% endif %}
                      x-intersect.once.margin.200px="Alpine.store('xCartHelper').validateCart();"
                      {% if product.selected_or_first_available_variant.available == false
                        or quantity_rule_soldout
                        or product.selected_or_first_available_variant == nil
                      %}
                        disabled
                      {% endif %}
                    >
                      <span class="w-5 h-5 flex items-center justify-center md:w-6 md:h-6" x-show="!loading">{%- render 'icon-cart-all', icon: 'icon-cart-quick-add' -%}</span>
                      <span class="block w-5 h-5 animate-spin" x-show="loading" x-cloak>
                        {% render 'icon-alls', icon: 'icon-loading' %}
                      </span>
                    </button>
                  {%- endform -%}
                  <div class="hidden md:flex items-center gap-x-2 text-left rtl:text-right p-break-words mb-2 mt-2 pl-4 pr-4 pt-3 pb-3 bg-[rgba(var(--color-error),0.2)]{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}" role="alert" x-cloak x-show="errorMessage" @click.away="errorMessage=false">
                    <div class="flex">
                      <span class="w-4 h-4">{% render 'icon-alls', icon: 'icon-error' %}</span>
                    </div>
                    <span class="error_message ml-2 pt-0.5" x-ref="error_message"></span>
                  </div>
                </div>
              </div>
              <a href="{{ product.url }}" class="view_product_detail hover-text-link nav-link relative inline-block">
                {{ 'products.product.view_full_details' | t }}
              </a>
            </div>
            <div class="flex items-center gap-x-2 text-left rtl:text-right p-break-words md:hidden md:mb-2 mt-2 pl-4 pr-4 pt-3 pb-3 bg-[rgba(var(--color-error),0.2)]{% if settings.edges_type == 'rounded_corners' %} rounded-md{% endif %}" role="alert" x-cloak x-show="errorMessage" @click.away="errorMessage=false">
              <div class="flex">
                <span class="w-4 h-4">{% render 'icon-alls', icon: 'icon-error' %}</span>
              </div>
              <span class="ml-2 pt-0.5 error_message" x-ref="error_message_mobile"></span>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
{% endpaginate %}